{"version":3,"sources":["components/employee-manager/employee-content/employee-options-panel/add-employee-modal/add-employee-modal-view.tsx","config.js","redux/constants.ts","components/employee-manager/employee-content/employee-options-panel/add-employee-modal/image-avatar/avatar-image.tsx","components/employee-manager/employee-content/employee-options-panel/add-employee-modal/image-avatar/index.js","redux/actions/Filter.ts","redux/actions/index.ts","redux/actions/Campaign.ts","redux/actions/Employee.ts","components/employee-manager/employee-content/employee-options-panel/add-employee-modal/company-details-form/company-details-form.tsx","components/employee-manager/employee-content/employee-options-panel/add-employee-modal/company-details-form/index.js","components/employee-manager/employee-content/employee-options-panel/add-employee-modal/personal-details-form/personal-details-form.tsx","components/employee-manager/employee-content/employee-options-panel/add-employee-modal/personal-details-form/index.js","dataProvider/campaign-api-handler.ts","components/employee-manager/campaign-panel/campaign-list-content/campaign-list-item/campaign-list-item-view.tsx","components/employee-manager/campaign-panel/campaign-list-content/campaign-list-item/campaign-list-item-container.ts","components/employee-manager/campaign-panel/campaign-list-content/campaign-list-content-view.tsx","components/employee-manager/campaign-panel/campaign-list-content/campaign-list-content-container.tsx","components/employee-manager/campaign-panel/campaign-panel-view.tsx","components/employee-manager/campaign-panel/campaign-panel-container.tsx","components/employee-manager/employee-content/campaign-employee-grid/employee-image-card/employee-details-drawer/employee-details-drawer.tsx","components/employee-manager/employee-content/campaign-employee-grid/employee-image-card/image-preview-modal/image-preview-modal.tsx","components/employee-manager/employee-content/campaign-employee-grid/employee-image-card/employee-image-card-view.tsx","components/employee-manager/employee-content/campaign-employee-grid/employee-image-card/employee-image-card-container.tsx","components/employee-manager/employee-content/campaign-employee-grid/campaign-employee-grid-view.tsx","components/employee-manager/employee-content/campaign-employee-grid/campaign-employee-grid-container.tsx","assets/icons/add.tsx","components/employee-manager/employee-content/employee-options-panel/employee-search-bar/employee-search-bar-view.tsx","components/employee-manager/employee-content/employee-options-panel/employee-search-bar/employee-search-bar-container.tsx","components/employee-manager/employee-content/employee-options-panel/employee-options-panel-view.tsx","components/employee-manager/employee-content/employee-options-panel/employee-options-panel-container.tsx","components/employee-manager/employee-content/employee-content-view.tsx","components/employee-manager/employee-content/employee-content-container.tsx","components/employee-manager/employee-manager.tsx","components/navbar/avatar-popup-content/avatar-popup-content.tsx","components/navbar/navbar.tsx","components/auth/login/login.tsx","components/auth/register/register.jsx","components/app/app.tsx","serviceWorker.ts","redux/reducers/campaigns.ts","redux/reducers/employees.ts","redux/reducers/index.ts","redux/reducers/filters/searchText.ts","redux/store.ts","index.tsx","dataProvider/employee-api-handler.ts","components/employee-manager/employee-content/employee-options-panel/add-employee-modal/add-employee-modal-container.tsx","components/employee-manager/employee-content/employee-options-panel/add-employee-modal/index.js"],"names":["dummyEmployee","personalInfo","firstName","lastName","address","primaryContact","emergencyContact","cnic","bankAccountNumber","companyInfo","email","campaignId","hrmsId","employmentStatus","attendanceId","basicSalary","salesTarget","appointmentDate","Date","getMonth","getDate","getFullYear","isDocumented","isEmployeeCardHolder","isInsuranceCardHolder","attachmentFiles","Step","Steps","steps","title","contentId","icon","EmployeeContext","React","createContext","AddEmployeeModal","props","selectedCampaign","addEmployee","addEmployeeModalModalVisibility","addEmployeeModal_OnCancel","addEmployeeModal_OnOk","useState","current","setCurrent","employeePersonalInfo","setEmployeePersonalInfo","employeeCompanyInfo","setEmployeeCompanyInfo","filesToUpload","setFilesToUpload","a","employee","_id","emoloyeeApiHandler","addedEmployee","notification","message","description","className","visible","okText","width","onOk","onCancel","footer","index","Provider","value","name","renderForm","map","item","key","type","length","onClick","style","marginLeft","Config","ServiceEndpoint","constants","UPDATE_EMPLOYEE","SET_EMPLOYEES","ADD_EMPLOYEES","REMOVE_EMPLOYEES","UPDATE_CAMPAIGN","SET_CAMPAIGNS","ADD_CAMPAIGNS","REMOVE_CAMPAIGNS","SELECT_CAMPAIGN","UPDATE_SEARCH_TEXT","AvatarImage","listType","showUploadList","multiple","beforeUpload","file","isJpgOrPng","error","isLt2M","size","customRequest","onSuccess","setTimeout","onChange","info","fileList","actions","campaignActions","selectCampaign","campaign","Constants","payload","updateCampaign","setCampaigns","campaignList","addCampaigns","removeCampaigns","employeeActions","updateEmployee","setEmployees","employeeList","addEmployees","removeEmployees","filterActions","updateFilterText","text","formItemLayout","labelCol","xs","span","sm","wrapperCol","Form","create","getFieldDecorator","form","useContext","handleInputChange","event","target","console","log","checked","id","layout","onSubmit","preventDefault","validateFields","err","values","Item","label","initialValue","rules","required","prefix","color","placeholder","format","Group","axios","require","CAMPAIGN_ENDPOINT","getAllCampaigns","fetchedCampaigns","Array","get","data","forEach","album","push","addCampaign","post","res","endpoint","put","deleteCampaign","delete","CampaignListItem","actionsVisibility","setActionsVisibility","isEditable","setIsEditable","editInputRef","createRef","campaignName","updateCampaignName","employeeApiHandler","fetchedEmployees","updatedCampaign","campaignApiHandler","stopPropagation","useEffect","focus","onMouseLeave","onMouseEnter","display","flexDirection","flexGrow","ref","allowClear","border","padding","textAlign","fontSize","marginRight","cancelText","onConfirm","connect","disptach","campaigns","employees","CampaignListContent","mode","height","borderRight","marginTop","state","CampaignPanel","isLoading","setIsLoading","newCampaign","CampaignApiHandler","loading","active","paragraph","rows","margin","EmployeeDetailsDrawer","employeeDetailsVisibility","employeeDetails_OnClose","placement","closable","onClose","justifyContent","alt","src","profileImageURL","shape","bordered","column","ImagePreviewModal","imagePreviewUrl","imagePreview_OnCancel","Meta","Card","EmployeeImageCard","toogleEmployeeSelect","removeEmployee","setImagePreviewUrl","setEmployeeDetailsVisibility","isSelected","checkboxVisiblility","setcheckboxVisiblility","position","zIndex","hoverable","cover","indicator","url","temp","CampaignEmployeeGrid","selectionText","selectAllStateIndeterminate","selectAllStateChecked","filteredEmployees","searchText","selectedCount","filter","marginBottom","indeterminate","grid","gutter","dataSource","renderItem","find","toLowerCase","includes","filters","Add","viewBox","d","EmployeeSearchBar","optionLabelProp","onSearch","suffix","viewStyleOptions","EmployeeOptionsPanel","setAddEmployeeModalModalVisibility","viewStyle","viewStyle_OnClick","selectedViewStyle","obj","Key","background","paddingRight","fill","overlay","selectedKeys","Icon","Name","verticalAlign","Content","Layout","EmployeeContent","setViewStyle","EmployeeApiHandler","minHeight","EmployeeContentView","Sider","EmployeeManager","AvatarPopupContent","selectable","rel","href","NavBar","align","alignItems","to","subTitle","content","trigger","backgroundColor","cursor","valuePropName","htmlType","Option","Select","RegistrationForm","AutoComplete","confirmDirty","autoCompleteResult","handleSubmit","e","validateFieldsAndScroll","handleConfirmBlur","setState","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","force","this","tailFormItemLayout","offset","prefixSelector","hasFeedback","validator","Password","onBlur","whitespace","addonBefore","Component","Header","Footer","App","exact","path","Boolean","window","location","hostname","match","compareCampaigns","firstCampaign","secondCampaign","albumID","compareEmployees","firstEmployee","secondEmployee","combineReducers","action","otherCampaigns","sort","slice","moreCampaigns","campaignsToRemove","campaignToRemove","campaignToSelect","updatedEmployee","otherEmployees","moreEmployees","employeesToRemove","employeeToDelete","consoleMessages","store","next","result","groupCollapsed","getState","selectedAlbum","groupEnd","applyMiddleware","thunk","createStore","appReducer","Store","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","EMPLOYEE_ENDPOINT","getEmployeesByCampaign","addNewEmployee","status","Error","deleteEmployee","employeeId"],"mappings":"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","file":"static/js/main.9421e0d0.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { Steps, Button, message, Modal, Icon, notification } from 'antd';\r\nimport './add-employee-modal.css';\r\nimport PersonalDetailsForm from \"./personal-details-form\";\r\nimport CompanyDetailsForm from \"./company-details-form\";\r\nimport AvatarImage from \"./image-avatar\";\r\nimport * as emoloyeeApiHandler from \"../../../../../dataProvider/employee-api-handler\";\r\nimport * as fs from 'fs'\r\n\r\nconst dummyEmployee = {\r\n  personalInfo: {\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    address: \"\",\r\n    primaryContact: \"\",\r\n    emergencyContact: \"\",\r\n    cnic: \"\",\r\n    bankAccountNumber: \"\",\r\n  },\r\n  companyInfo: {\r\n    email: \"@allstar.com\",\r\n    campaignId: \"\",\r\n    hrmsId: \"\",\r\n    employmentStatus: \"Pakistan\",\r\n    attendanceId: \"\",\r\n    basicSalary: \"\",\r\n    salesTarget: \"\",\r\n    appointmentDate: (new Date().getMonth() + 1) + \"/\" + new Date().getDate() + \"/\" + new Date().getFullYear(),\r\n    isDocumented: false,\r\n    isEmployeeCardHolder: false,\r\n    isInsuranceCardHolder: false,\r\n  },\r\n  attachmentFiles: [],\r\n}\r\n\r\nconst { Step } = Steps;\r\nconst steps = [\r\n  {\r\n    title: 'Personal',\r\n    contentId: 1,\r\n    icon: 'user',\r\n  },\r\n  {\r\n    title: 'Company',\r\n    contentId: 2,\r\n    icon: 'idcard',\r\n  },\r\n  {\r\n    title: 'Verify',\r\n    contentId: 3,\r\n    icon: 'save',\r\n  },\r\n];\r\nexport const EmployeeContext = React.createContext([{}, () => { }]);\r\n\r\nconst AddEmployeeModal: React.FC<any> = (props: any) => {\r\n  let {\r\n    selectedCampaign,\r\n    addEmployee,\r\n    addEmployeeModalModalVisibility,\r\n    addEmployeeModal_OnCancel,\r\n    addEmployeeModal_OnOk,\r\n  } = props;\r\n\r\n  let [current, setCurrent] = useState(0);\r\n  let [employeePersonalInfo, setEmployeePersonalInfo] = useState(dummyEmployee.personalInfo);\r\n  let [employeeCompanyInfo, setEmployeeCompanyInfo] = useState(dummyEmployee.companyInfo);\r\n  let [filesToUpload, setFilesToUpload] = useState([]);\r\n\r\n  function next() {\r\n    setCurrent(current + 1);\r\n  }\r\n\r\n  function prev() {\r\n    setCurrent(current - 1);\r\n  }\r\n  function reset() {\r\n    setFilesToUpload([]);\r\n    setEmployeePersonalInfo(dummyEmployee.personalInfo);\r\n    setEmployeeCompanyInfo(dummyEmployee.companyInfo);\r\n    setCurrent(0);\r\n  }\r\n\r\n  function base64_encode(file: File) {\r\n    // read binary data\r\n    var bitmap = fs.readFileSync(file.name, 'base64');\r\n    // convert binary data to base64 encoded string\r\n    return new Buffer(bitmap).toString('base64');\r\n  }\r\n  async function submitEmployee() {\r\n    let employee = {\r\n      personalInfo: employeePersonalInfo,\r\n      companyInfo: employeeCompanyInfo,\r\n      attachmentFiles: filesToUpload\r\n    }\r\n    employee.companyInfo.campaignId = selectedCampaign._id;\r\n    // TODO: Upload Files\r\n    // if (filesToUpload.length > 0) {\r\n    //   // @ts-ignore\r\n    //   let file = filesToUpload[0].originFileObj;\r\n    //   console.log(file);\r\n    //   let image = base64_encode(file);\r\n    //   console.log(image);\r\n    // }\r\n    // return;\r\n\r\n    // TODO: API Call to Add new Employee\r\n    try {\r\n      \r\n    let addedEmployee = await emoloyeeApiHandler.addNewEmployee(employee);\r\n\r\n    // To Show Newly added Employee on Grid.\r\n    addEmployee(addedEmployee);\r\n\r\n      notification['success']({\r\n        message: 'Success!',\r\n        description:\r\n          `Employee Added Successfully.`,\r\n      });\r\n      reset();\r\n    }\r\n    catch (error) {\r\n      notification['error']({\r\n        message: 'Error!',\r\n        description:\r\n          `Failed to Add Employee. ${error.message}`,\r\n      });\r\n    }\r\n    addEmployeeModal_OnCancel(); // Hide Modal \r\n  }\r\n  function renderForm(index: number) {\r\n    switch (index) {\r\n      case 1:\r\n        return (\r\n          <EmployeeContext.Provider value={[employeePersonalInfo, setEmployeePersonalInfo]}>\r\n            <PersonalDetailsForm />\r\n          </EmployeeContext.Provider>\r\n        );\r\n      case 2:\r\n        return (\r\n          <EmployeeContext.Provider value={[employeeCompanyInfo, setEmployeeCompanyInfo]}>\r\n            <CompanyDetailsForm />\r\n          </EmployeeContext.Provider>\r\n        );\r\n      default:\r\n        return <h1> {selectedCampaign.name} </h1>\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"AddEmployeeModal\">\r\n      <Modal className=\"add-employee-modal\"\r\n        visible={addEmployeeModalModalVisibility}\r\n        okText={\"Submit\"}\r\n        width=\"50%\"\r\n        onOk={addEmployeeModal_OnOk}\r\n        onCancel={addEmployeeModal_OnCancel}\r\n        footer={[]} >\r\n        <div className=\"avatar-image\">\r\n          <AvatarImage setFilesToUpload={setFilesToUpload}\r\n            filesToUpload={filesToUpload} />\r\n        </div>\r\n\r\n        <div className=\"steps-content\">\r\n          {/* Show Forms based on index*/\r\n            renderForm(steps[current].contentId)\r\n          }\r\n        </div>\r\n\r\n        <div className=\"add-employee-steps\">\r\n          <Steps current={current} >\r\n            {steps.map(item => (\r\n              <Step key={item.title} title={item.title} icon={<Icon type={item.icon} />} />\r\n            ))}\r\n          </Steps>\r\n\r\n          <div className=\"steps-action\">\r\n            {current < steps.length - 1 && (\r\n              <Button type=\"primary\" onClick={next}>\r\n                Next\r\n            </Button>\r\n            )}\r\n            {current === steps.length - 1 && (\r\n              <Button type=\"primary\" onClick={submitEmployee}>\r\n                Save\r\n            </Button>\r\n            )}\r\n            {current > 0 && (\r\n              <Button style={{ marginLeft: 8 }} onClick={prev}>\r\n                Previous\r\n            </Button>\r\n            )}\r\n\r\n          </div>\r\n\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddEmployeeModal;\r\n","/**\r\n * Reference: https://stackoverflow.com/a/48472490/2077741\r\n */\r\n\r\nlet Config = {\r\n    ServiceEndpoint: \"http://localhost:3000/api/v1\",\r\n}\r\n\r\nexport default Config;","const constants = {\r\n\tUPDATE_EMPLOYEE:\"UPDATE_EMPLOYEE\",\r\n\tSET_EMPLOYEES: \"SET_EMPLOYEES\",\r\n\tADD_EMPLOYEES:\"ADD_EMPLOYEES\",\r\n\tREMOVE_EMPLOYEES: \"REMOVE_EMPLOYEES\",\r\n\t\r\n\tUPDATE_CAMPAIGN: \"UPDATE_CAMPAIGN\",\r\n\tSET_CAMPAIGNS: \"SET_CAMPAIGNS\",\r\n\tADD_CAMPAIGNS: \"ADD_CAMPAIGNS\",\r\n\tREMOVE_CAMPAIGNS: \"REMOVE_CAMPAIGNS\",\r\n\tSELECT_CAMPAIGN: \"SELECT_CAMPAIGN\",\r\n\t\r\n\r\n\tUPDATE_SEARCH_TEXT:\"UPDATE_SEARCH_TEXT\",\r\n}\r\nexport default constants","import React, { useState } from 'react';\r\nimport { Upload, message, Icon } from \"antd\";\r\nimport './avatar-image.css';\r\n\r\nconst AvatarImage: React.FC<any> = (props: any) => {\r\n\r\n  let {\r\n    filesToUpload,\r\n    setFilesToUpload\r\n  } = props;\r\n  // let [imagesToUpload, setImagesToUpload] = useState([{}]);\r\n\r\n  /**\r\n   * Used to solve the upload on file select issue.\r\n   * Reference: https://stackoverflow.com/a/51519603/2077741\r\n   */\r\n  // @ts-ignore\r\n  function dummyRequest({ file, onSuccess }) {\r\n    setTimeout(() => {\r\n      onSuccess(\"ok\");\r\n    }, 0);\r\n  }\r\n  function beforeUpload(file: File) {\r\n    const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\r\n    if (!isJpgOrPng) {\r\n      message.error('You can only upload JPG/PNG file!');\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      message.error('Image must smaller than 2MB!');\r\n    }\r\n    return isJpgOrPng && isLt2M;\r\n  }\r\n\r\n  function handleChange(info: any) {\r\n    setFilesToUpload(info.fileList);\r\n  }\r\n  return (\r\n    <div className=\"justify-content-center\">\r\n        <Upload\r\n          name=\"avatar\"\r\n          listType=\"picture-card\"\r\n          className=\"avatar-uploader\"\r\n          showUploadList={true}\r\n          multiple={true}\r\n          beforeUpload={beforeUpload}\r\n          customRequest={dummyRequest}\r\n          onChange={handleChange}\r\n      >\r\n        { (filesToUpload.length < 1) &&\r\n        (<div>\r\n        <Icon type='plus' />\r\n        <div className=\"ant-upload-text\">Profile Image</div>\r\n      </div>)}\r\n        </Upload>\r\n    </div>\r\n    );\r\n}\r\nexport default AvatarImage;\r\n","export { default } from './avatar-image';","import Constants from '../constants'\r\n\r\nfunction updateFilterText(text: string){\r\n    return {\r\n        type: Constants.UPDATE_SEARCH_TEXT,\r\n        payload: text\r\n    }\r\n}\r\n\r\nconst filterActions = {\r\n  updateFilterText: updateFilterText\r\n}\r\nexport default filterActions;\r\n","import campaignActions from \"./Campaign\";\r\nimport employeeActions from \"./Employee\";\r\nimport filterActions from \"./Filter\";\r\n\r\nconst actions = {\r\n    campaignActions : campaignActions,\r\n    employeeActions : employeeActions,\r\n    filterActions : filterActions\r\n}\r\nexport default actions;","import Constants from '../constants'\r\n\r\nfunction selectCampaign(campaign: any) {\r\n    return {\r\n        type: Constants.SELECT_CAMPAIGN,\r\n        payload: campaign\r\n    }\r\n}\r\nfunction updateCampaign(campaign: any) {\r\n    return {\r\n        type: Constants.UPDATE_CAMPAIGN,\r\n        payload: campaign\r\n    }\r\n}\r\n\r\nfunction setCampaigns(campaignList: [any]) {\r\n    return {\r\n        type: Constants.SET_CAMPAIGNS,\r\n        payload: campaignList\r\n    }\r\n}\r\nfunction addCampaigns(campaignList: [any]) {\r\n    return {\r\n        type: Constants.ADD_CAMPAIGNS,\r\n        payload: campaignList\r\n    }\r\n}\r\nfunction removeCampaigns(campaignList: [any]) {\r\n    return {\r\n        type: Constants.REMOVE_CAMPAIGNS,\r\n        payload: campaignList\r\n    }\r\n}\r\n\r\nconst campaignActions = {\r\n  selectCampaign : selectCampaign,\r\n  updateCampaign : updateCampaign,\r\n  setCampaigns : setCampaigns,\r\n  addCampaigns : addCampaigns,\r\n  removeCampaigns : removeCampaigns\r\n  }\r\nexport default campaignActions;\r\n","import Constants from '../constants'\r\n\r\nfunction updateEmployee(employee: any){\r\n  return{\r\n      type: Constants.UPDATE_EMPLOYEE,\r\n      payload: employee\r\n  }\r\n}\r\n\r\nfunction setEmployees(employeeList: [any]){\r\n    return{\r\n        type: Constants.SET_EMPLOYEES,\r\n        payload: employeeList\r\n    }\r\n}\r\nfunction addEmployees(employeeList: [any]){\r\n  return{\r\n      type: Constants.ADD_EMPLOYEES,\r\n      payload: employeeList\r\n  }\r\n}\r\nfunction removeEmployees(employeeList: [any]){\r\n  return{\r\n      type: Constants.REMOVE_EMPLOYEES,\r\n      payload: employeeList\r\n  }\r\n}\r\nconst employeeActions = {\r\n  updateEmployee : updateEmployee,\r\n  setEmployees : setEmployees,\r\n  addEmployees : addEmployees,\r\n  removeEmployees: removeEmployees\r\n}\r\nexport default employeeActions;","import React from 'react';\r\nimport { Form, Input, DatePicker, Radio, Icon } from 'antd';\r\nimport {FormComponentProps} from 'antd/lib/form/Form';\r\nimport './company-details-form.css';\r\nimport { EmployeeContext } from '../../add-employee-modal';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 6 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 },\r\n  },\r\n};\r\n\r\nconst CompanyDetailsForm: React.FC<any> = (props: any) => {\r\n  let {\r\n    getFieldDecorator\r\n  } = props.form;\r\n  let [employeeCompanyInfo, setEmployeeCompanyInfo]: any[] = React.useContext(EmployeeContext);\r\n\r\n  function handleDateChange(event: any) {\r\n    console.log(\"Date Changed : \");\r\n    console.log(event);\r\n  }\r\n\r\n  function handleInputChange(event: any) {\r\n    const target = event.target;\r\n    console.log(target);\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.id;\r\n    console.log(`Input Changed\\n Name: ${name} -- Value: ${value}`);\r\n    setEmployeeCompanyInfo({\r\n      ...employeeCompanyInfo,\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  function handleFormSubmit(event: any) {\r\n    event.preventDefault();\r\n    props.form.validateFields((err:any, values:any) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Form {...formItemLayout} layout=\"horizontal\" onSubmit={handleFormSubmit}>\r\n    <h3> Company Details</h3>\r\n    <Form.Item label=\"Email\" >\r\n        {getFieldDecorator('email', {\r\n        initialValue: employeeCompanyInfo.email,\r\n        rules: [{ required: true, message: `Please input employee's email!` }],\r\n        })(\r\n        <Input\r\n          prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n          placeholder=\"Company Email\"\r\n          onChange={handleInputChange}\r\n            />,\r\n          )}\r\n      </Form.Item>\r\n      <Form.Item label=\"Attendance Id\">\r\n        {getFieldDecorator('attendanceId', {\r\n        initialValue: employeeCompanyInfo.attendanceId,\r\n        rules: [{ required: true, message: `Please input employee's Attendence Id!` }],\r\n      })(\r\n        <Input\r\n          prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n          placeholder=\"Attendence Id\"\r\n          onChange={handleInputChange}\r\n        />,\r\n      )}\r\n      </Form.Item>\r\n\r\n      <Form.Item label=\"HRMS Id\">\r\n        {getFieldDecorator('hrmsId', {\r\n        initialValue: employeeCompanyInfo.hrmsId,\r\n        rules: [{ required: true, message: `Please input employee's Attendence Id!` }],\r\n      })(\r\n        <Input\r\n          prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n          placeholder=\"HRMS Id\"\r\n          onChange={handleInputChange}\r\n        />,\r\n      )}\r\n      </Form.Item>\r\n      <Form.Item label=\"Basic Salary\" >\r\n        {getFieldDecorator('basicSalary', {\r\n        initialValue: employeeCompanyInfo.basicSalary,\r\n        rules: [{ required: true, message: `Please input employee's basic Salary!` }],\r\n      })(\r\n        <Input\r\n          prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n          placeholder=\"Basic Salary\"\r\n          onChange={handleInputChange}\r\n        />,\r\n      )}\r\n      </Form.Item>\r\n      <Form.Item label=\"Sales Target\" >\r\n        {getFieldDecorator('salesTarget', {\r\n        initialValue: employeeCompanyInfo.salesTarget,\r\n        rules: [{ required: true, message: `Please input employee's sales Target!` }],\r\n      })(\r\n        <Input\r\n          prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n          placeholder=\"Sales Target\"\r\n          onChange={handleInputChange}\r\n        />,\r\n      )}\r\n      </Form.Item>\r\n      <Form.Item label=\"Appointment Date\" >\r\n        {getFieldDecorator('appointmentDate', {\r\n        \r\n        rules: [{ required: true, message: `Please input employee's appointment Date!` }],\r\n      })(\r\n        <DatePicker placeholder=\"Appointment Date\"\r\n                    format={\"YYYY/MM/DD\"}\r\n                    onChange={handleDateChange} />,\r\n      )}\r\n      </Form.Item>\r\n      <Form.Item label={employeeCompanyInfo.employmentStatus}>\r\n        {getFieldDecorator('employmentStatus', {\r\n        initialValue: employeeCompanyInfo.employmentStatus,\r\n        rules: [{ required: true, message: `Please select employee's current Status!` }],\r\n      })(\r\n        <Radio.Group id=\"employmentStatus\"\r\n          onChange={handleInputChange} >\r\n          <Radio value={1}>\r\n            Employed\r\n          </Radio>\r\n          <Radio value={2}>\r\n            Terminated\r\n          </Radio>\r\n          <Radio value={3}>\r\n            Resigned\r\n          </Radio>\r\n        </Radio.Group>,\r\n      )}\r\n      </Form.Item>\r\n      <Form.Item label=\"Documentation\" >\r\n        {getFieldDecorator('isDocumented', {\r\n        initialValue: employeeCompanyInfo.isDocumented,\r\n        rules: [{ required: true, message: `Please select if employee is documented!` }],\r\n      })(\r\n        <Radio.Group \r\n            onChange={handleInputChange} >\r\n        <Radio value={true}>\r\n          Yes\r\n        </Radio>\r\n        <Radio value={false}>\r\n          No\r\n        </Radio>\r\n      </Radio.Group>,\r\n      )}\r\n      </Form.Item>\r\n      <Form.Item label=\"Employee Card\" >\r\n        {getFieldDecorator('isEmployeeCardHolder', {\r\n        initialValue: employeeCompanyInfo.isEmployeeCardHolder,\r\n        rules: [{ required: true, message: `Please select if employee has Employee Card!` }],\r\n      })(\r\n        <Radio.Group\r\n          onChange={handleInputChange} >\r\n        <Radio value={true}>\r\n          Yes\r\n        </Radio>\r\n        <Radio value={false}>\r\n          No\r\n        </Radio>\r\n      </Radio.Group>,\r\n      )}\r\n      </Form.Item>\r\n      <Form.Item label=\"Insurance Card\" >\r\n        {getFieldDecorator('isInsuranceCardHolder', {\r\n        initialValue: employeeCompanyInfo.isInsuranceCardHolder,\r\n        rules: [{ required: true, message: `Please select if employee has insurance Card!` }],\r\n      })(\r\n        <Radio.Group\r\n          onChange={handleInputChange} >\r\n        <Radio value={true}>\r\n          Yes\r\n        </Radio>\r\n        <Radio value={false}>\r\n          No\r\n        </Radio>\r\n      </Radio.Group>,\r\n      )}\r\n      </Form.Item>\r\n  </Form>\r\n\r\n  );\r\n}\r\n\r\nexport default Form.create()(CompanyDetailsForm);","export { default } from './company-details-form';","import React, { useState } from 'react';\r\nimport { Steps, Button, Upload, Icon, Input, Form } from 'antd';\r\nimport {FormComponentProps} from 'antd/lib/form/Form';\r\nimport AvatarImage from \"../image-avatar\";\r\nimport './personal-details-form.css';\r\nimport {EmployeeContext} from '../../add-employee-modal';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 6 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 18 },\r\n  },\r\n};\r\n\r\nconst PersonalDetailsForm: React.FC<any> = (props: any) => {\r\n  let {\r\n    getFieldDecorator\r\n  } = props.form;\r\n\r\n  let [employeePersonalInfo, setEmployeePersonalInfo]: any[] = React.useContext(EmployeeContext);\r\n  \r\n  function handleInputChange(event: any) {\r\n    const target = event.target;\r\n    const value = target.type === 'checkbox' ? target.checked : target.value;\r\n    const name = target.id;\r\n\r\n    setEmployeePersonalInfo({\r\n      ...employeePersonalInfo,\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  function handleFormSubmit(event: any) {\r\n    event.preventDefault();\r\n    props.form.validateFields((err:any, values:any) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  }\r\n  \r\n  return (\r\n    <Form {...formItemLayout} layout=\"horizontal\" onSubmit={handleFormSubmit}>\r\n      <h3> Personal Details</h3>\r\n      <Form.Item label=\"First Name\" >\r\n        {getFieldDecorator('firstName', {\r\n          initialValue: employeePersonalInfo.firstName,\r\n          rules: [{ required: true, message: `Please input employee's firstname!` }],\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n            placeholder=\"First Name\"\r\n            onChange={handleInputChange}\r\n          />,\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item label=\"Last Name\" >\r\n        {getFieldDecorator('lastName', {\r\n          initialValue: employeePersonalInfo.lastName,\r\n          rules: [{ required: true, message: `Please input employee's lastname!` }],\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n            placeholder=\"Last Name\"\r\n            onChange={handleInputChange}\r\n          />,\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item label=\"Address\" >\r\n        {getFieldDecorator('address', {\r\n          initialValue: employeePersonalInfo.address,\r\n          rules: [{ required: true, message: `Please input employee's address!` }],\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n            placeholder=\"Address\"\r\n            onChange={handleInputChange}\r\n          />,\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item label=\"Primary Contact\" >\r\n        {getFieldDecorator('primaryContact', {\r\n          initialValue: employeePersonalInfo.primaryContact,\r\n          rules: [{ required: true, message: `Please input employee's contact!` }],\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n            placeholder=\"Contact Number\"\r\n            onChange={handleInputChange}\r\n          />,\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item label=\"Emergency Contact\" >\r\n        {getFieldDecorator('emergencyContact', {\r\n          initialValue: employeePersonalInfo.emergencyContact,\r\n          rules: [{ required: true, message: `Please input emergency Contact!` }],\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n            placeholder=\"Emergency Contact Number\"\r\n            onChange={handleInputChange}\r\n          />,\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item label=\"CNIC\" >\r\n        {getFieldDecorator('cnic', {\r\n          initialValue: employeePersonalInfo.cnic,\r\n          rules: [{ required: true, message: `Please input employees CNIC!` }],\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n            placeholder=\"CNIC\"\r\n            onChange={handleInputChange}\r\n          />,\r\n        )}\r\n      </Form.Item>\r\n      <Form.Item label=\"Bank Account Number\" >\r\n        {getFieldDecorator('bankAccountNumber', {\r\n          initialValue: employeePersonalInfo.bankAccountNumber,\r\n          rules: [{ required: true, message: `Please input Bank Account Number!` }],\r\n        })(\r\n          <Input\r\n            prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n            placeholder=\"Bank Account Number\"\r\n            onChange={handleInputChange}\r\n          />,\r\n        )}\r\n      </Form.Item>\r\n    </Form>\r\n);\r\n}\r\n\r\nexport default Form.create()(PersonalDetailsForm);;","export { default } from './personal-details-form';\r\n","import Config from '../config';\r\nconst axios = require('axios');\r\n\r\nconst CAMPAIGN_ENDPOINT = `${Config.ServiceEndpoint}/campaign`;\r\nexport async function getAllCampaigns() {\r\n    // return GetDummyCampaigns();\r\n\r\n    let fetchedCampaigns = new Array();\r\n    try {\r\n        let response = await axios.get(CAMPAIGN_ENDPOINT);\r\n        response.data.forEach((album: any) => {\r\n            fetchedCampaigns.push(album);\r\n        });\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n    return fetchedCampaigns;\r\n}\r\n\r\nexport async function addCampaign(campaign: any) {\r\n\r\n    try {\r\n        var res = await axios.post(CAMPAIGN_ENDPOINT, campaign);\r\n        return res.data;\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\nexport async function updateCampaign(campaign: any) {\r\n    try {\r\n        let endpoint = `${CAMPAIGN_ENDPOINT}/${campaign._id}`\r\n        var res = await axios.put(endpoint, campaign);\r\n        return res.data;\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\nexport async function deleteCampaign(campaign: any) {\r\n    try {\r\n        let endpoint = `${CAMPAIGN_ENDPOINT}/${campaign._id}`\r\n        return await axios.delete(endpoint, campaign);\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { Input, notification, Icon, Popconfirm } from 'antd';\r\nimport './campaign-list-item.css';\r\nimport * as campaignApiHandler from \"../../../../../dataProvider/campaign-api-handler\";\r\nimport * as employeeApiHandler from \"../../../../../dataProvider/employee-api-handler\";\r\nconst CampaignListItem: React.FC<any> = (props: any) => {\r\n  let {\r\n    campaign,\r\n    selectCampaign,\r\n    removeCampaigns,\r\n    setEmployees\r\n  } = props;\r\n  let [actionsVisibility, setActionsVisibility] = useState(false);\r\n  let [isEditable, setIsEditable] = useState(false);\r\n  let editInputRef: any = React.createRef();\r\n  let [campaignName, updateCampaignName] = useState(campaign.name);\r\n\r\n  useEffect(() => {\r\n    // if (campaign.name == \"Default\")\r\n    //   setActionsVisibility(false);\r\n    if(isEditable)\r\n      editInputRef.current.focus()\r\n  })\r\n\r\n  async function singleCampaign_OnClick(event: any) {\r\n    selectCampaign(campaign);\r\n\r\n    let fetchedEmployees = await employeeApiHandler.getEmployeesByCampaign(campaign._id);\r\n    setEmployees(fetchedEmployees);\r\n\r\n  }\r\n  \r\n  function singleCampaign_OnMouseEnter(event: any) {\r\n    setActionsVisibility(true);\r\n  }\r\n  \r\n  function singleCampaign_OnMouseLeave(event: any) {\r\n    setActionsVisibility(false);\r\n  }\r\n  \r\n  function campaignName_OnChange(event: any) {\r\n    updateCampaignName(event.target.value);\r\n  }\r\n\r\n  function editCampaign_OnClick(event: any) {\r\n    event.stopPropagation();\r\n    setIsEditable(true);\r\n  }\r\n\r\n  async function confirmEdit_OnClick(event: any) {\r\n    // Create updated Campaign Object from current (Not updating current campaign incase update fails)\r\n    let updatedCampaign = campaign;\r\n    updatedCampaign.name = campaignName;\r\n    try {\r\n      setIsEditable(false);\r\n      await campaignApiHandler.updateCampaign(updatedCampaign);\r\n      updateCampaignName(campaignName);\r\n      notification['success']({\r\n        message: 'Success!',\r\n        description:\r\n          `Campaign Name Updated.`,\r\n      });\r\n    }catch (error) {\r\n      updateCampaignName(campaign.name);\r\n    }\r\n  }\r\n\r\n  function cancelEdit_OnClick(event: any) {\r\n    event.stopPropagation();\r\n    setIsEditable(false);\r\n    updateCampaignName(campaign.name);\r\n  }\r\n\r\n  function deleteCampaign_OnClick(event: any) {\r\n    event.stopPropagation();\r\n  }\r\n\r\n  async function deleteCampaign_OnConfirm(event: any) {\r\n    event.stopPropagation();\r\n    // Delete Campaign by sending an API Call.\r\n    try {\r\n      let res = await campaignApiHandler.deleteCampaign(campaign);\r\n      console.log(\"Remove Campaign Response\");\r\n      console.log(res);\r\n      removeCampaigns([campaign]);\r\n      \r\n      notification['success']({\r\n        message: 'Success.',\r\n        description:`Campaign ${campaign.name} Deleted!`,\r\n        });\r\n\r\n    } catch (error) {\r\n        notification['error']({\r\n        message: 'Error.',\r\n        description:`${error.message}`,\r\n        });\r\n    }\r\n  }\r\n\r\n  function deleteCampaign_OnCancel(event: any) {\r\n    event.stopPropagation();\r\n  }\r\n\r\n  return (\r\n   <div onMouseLeave={singleCampaign_OnMouseLeave} \r\n        onMouseEnter={singleCampaign_OnMouseEnter} \r\n        onClick={singleCampaign_OnClick}\r\n        style={{display:\"flex\", flexDirection:\"row\"}} >\r\n     <div style={{flexGrow:3}}>\r\n        <Icon type=\"cluster\" />\r\n        {\r\n        isEditable\r\n        ? <Input  value={campaignName}\r\n                  onChange={campaignName_OnChange}\r\n                  ref={editInputRef}\r\n                  allowClear \r\n                  style={{width:\"140px\", border:\"none\", padding:\"0px\"}}/>\r\n        : <span>{campaign.name}</span>  \r\n        }\r\n      </div>\r\n      {\r\n      actionsVisibility\r\n      ? <div style={{flexGrow:1, textAlign:\"right\"}}>\r\n          {isEditable\r\n          ? ( <div style={{marginLeft:40}}>\r\n                <a onClick={confirmEdit_OnClick} >\r\n                  <Icon type=\"check\" \r\n                        key=\"confirmEditCampaign\"\r\n                        title=\"Confirm Edit Campaign Name\"\r\n                        style={{fontSize:15, marginRight:20}}/>\r\n                </a>\r\n                  <a onClick={cancelEdit_OnClick}>\r\n                    <Icon type=\"close\" \r\n                          key=\"cancelEditCampaign\"\r\n                          title=\"Cancel Edit Campaign\"\r\n                          style={{fontSize:15, color:\"red\"}}/>\r\n                  </a>\r\n              </div> )\r\n          : ( \r\n              <div style={{marginLeft:40}}> \r\n                <a onClick={editCampaign_OnClick} >\r\n                  <Icon type=\"edit\" \r\n                        key=\"editCampaign\"\r\n                        title=\"Edit Campaign Name\"\r\n                        style={{fontSize:15, marginRight:20}}/>\r\n                </a>\r\n                <Popconfirm title={`${campaign.name} & its Employees will be deleted. Are you sure?`}\r\n                okText=\"Yes\"\r\n                cancelText=\"No\"\r\n                onConfirm={deleteCampaign_OnConfirm}\r\n                onCancel={deleteCampaign_OnCancel} >     \r\n                    <a onClick={deleteCampaign_OnClick}>\r\n                      <Icon type=\"delete\" \r\n                            key=\"deleteCampaign\"\r\n                            title=\"Delete Campaign\"\r\n                            style={{fontSize:15, color:\"red\"}}/>\r\n                    </a>\r\n              </Popconfirm>\r\n            </div> )\r\n          }\r\n        </div>\r\n        : null\r\n        }\r\n   </div>\r\n  );\r\n}\r\n\r\nexport default CampaignListItem;\r\n","import CampaignListItem from './campaign-list-item-view'\r\nimport { connect } from 'react-redux'\r\nimport actions from '../../../../../redux/actions';\r\n\r\nconst mapDispatchToProps = (disptach: any) => \r\n  ({\r\n    selectCampaign(campaign: any) {\r\n      disptach(\r\n        actions.campaignActions.selectCampaign(campaign)\r\n      )\r\n    },\r\n    removeCampaigns(campaigns: [any]) {\r\n      disptach(\r\n        actions.campaignActions.removeCampaigns(campaigns)\r\n      )\r\n    },\r\n    setEmployees(employees: [any]) {\r\n      disptach(\r\n        actions.employeeActions.setEmployees(employees)\r\n      )\r\n    }\r\n  })  \r\n\r\nexport default connect(null, mapDispatchToProps)(CampaignListItem)  \r\n","import React from 'react';\r\nimport { Menu, Empty, Icon } from 'antd';\r\nimport CampaignListItem from \"./campaign-list-item\";\r\nimport './campaign-list-content.test';\r\n\r\nconst CampaignListContent: React.FC<any> = (props: any) => {\r\n  let { \r\n    campaigns,\r\n    selectCampaign,\r\n  } = props;\r\n  \r\n  /**\r\n   * Event on an campaign being clicked from menu.\r\n   * @param event \r\n   */\r\n  function singleCampaign_OnClick(event: any) {\r\n    // Update Employee Content to Show All Employees of selected campaign  \r\n    let campaign = campaigns[event.key];\r\n    selectCampaign(campaign);    \r\n  }\r\n\r\n  if (!campaigns || !campaigns.length) {\r\n    return (\r\n      <Empty \r\n        style={{ marginTop: '60%' }}\r\n        description={\"No Campaigns\"} />\r\n    ); \r\n  }\r\n\r\n  return (\r\n    <div className=\"CampaignListContent\">\r\n      <Menu\r\n        mode=\"inline\"\r\n        style={{ height: '100%', borderRight: 0 }} >\r\n          {\r\n            campaigns.map((campaign: any, key: number) => (\r\n              <Menu.Item key={key} >\r\n                <CampaignListItem campaign={campaign}/> \r\n              </Menu.Item>\r\n            ))\r\n          }\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CampaignListContent;\r\n","import CampaignListContent from './campaign-list-content-view'\r\nimport { connect } from 'react-redux'\r\nimport actions from '../../../../redux/actions';\r\n\r\nconst mapStateToProps = (state:any) => \r\n  ({\r\n    campaigns: state.campaigns\r\n  })\r\n\r\nconst mapDispatchToProps = (disptach:any) => \r\n  ({\r\n    selectCampaign(campaign:any) {\r\n      disptach(\r\n        actions.campaignActions.selectCampaign(campaign)\r\n      )\r\n    }\r\n  })  \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CampaignListContent)  \r\n","import React, { useState , MouseEvent, useEffect } from 'react';\r\nimport { notification, Skeleton, Button, Icon } from 'antd';\r\nimport CampaignListContent from './campaign-list-content';\r\nimport './campaign-panel.css';\r\nimport * as CampaignApiHandler from \"../../../dataProvider/campaign-api-handler\";\r\n\r\nconst CampaignPanel: React.FC = (props:any) => {\r\n\r\n  let {\r\n    campaigns,\r\n    setCampaigns,\r\n    addCampaigns\r\n  } = props;\r\n\r\n  // const [campaigns, setCampaigns] = useState(new Array());\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  /**\r\n   * Fetch Campaigns from API and set campaigns variable\r\n   */\r\n  useEffect( () => {\r\n\r\n    (async function anyNameFunction() {\r\n      try{\r\n        let fetchedCampaigns = await CampaignApiHandler.getAllCampaigns();\r\n        setCampaigns(fetchedCampaigns);\r\n        setIsLoading(false);\r\n      }catch(err){\r\n        console.log(err);\r\n        notification['error']({\r\n          message: 'Error Fetching Campaigns',\r\n          description:\r\n            `${err.message}.`,\r\n        });\r\n      }\r\n      })();\r\n    }, []);  // [] means effect function should be called once: after the first mount/render only.\r\n\r\n  async function createCampaign_OnClick(event: MouseEvent<HTMLButtonElement | HTMLAnchorElement>) {\r\n    console.log('Create Campaign clicked.');\r\n\r\n    let campaignName = campaigns? 'Campaign ' + campaigns.length : 'Campaign 1';\r\n    \r\n    // axios.interceptors.request.use(request => {\r\n    //   console.log('Starting Request', request)\r\n    //   return request\r\n    // })\r\n\r\n    // Send API POST Request to Add Campaign\r\n    let newCampaign = { \r\n        name: campaignName,\r\n      };\r\n    try{\r\n      newCampaign = await CampaignApiHandler.addCampaign(newCampaign);\r\n      console.log(\"Campaign Added.\");\r\n      console.log(newCampaign);\r\n      if(newCampaign){\r\n        // Handle Success\r\n        addCampaigns([newCampaign]);\r\n        notification['success']({\r\n          message: 'Campaign Added',\r\n          description:\r\n            `${newCampaign.name}.`,\r\n        });\r\n      }\r\n    }catch(err){\r\n      console.log(err);\r\n      notification['error']({\r\n        message: 'Error',\r\n        description:\r\n          `${err.message}`,\r\n      });\r\n    }\r\n  }\r\n\r\n \r\n  return (\r\n    \r\n    <div className=\"CampaignPanel\">\r\n      <Skeleton loading={isLoading} active className=\"campaign-skeleton\" paragraph={{ rows: 10 }} >\r\n        <div style={{ textAlign: 'right', margin: '6px 20px 6px 20px' }}>\r\n          <Button onClick={createCampaign_OnClick}>\r\n          <Icon type=\"plus-circle\" />\r\n            <span>Add Campaign</span>\r\n          </Button>\r\n        </div>\r\n          <CampaignListContent />\r\n      </Skeleton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CampaignPanel;\r\n","import CampaignPanel from './campaign-panel-view'\r\nimport { connect } from 'react-redux'\r\nimport actions from '../../../redux/actions';\r\n\r\nconst mapStateToProps = (state:any) => \r\n  ({\r\n    campaigns: state.campaigns\r\n  })\r\n\r\nconst mapDispatchToProps = (disptach:any) => \r\n  ({\r\n    setCampaigns(campaigns:[any]) {\r\n      disptach(\r\n        actions.campaignActions.setCampaigns(campaigns)\r\n      )\r\n    },\r\n    addCampaigns(campaigns:[any]) {\r\n      disptach(\r\n        actions.campaignActions.addCampaigns(campaigns)\r\n      )\r\n    }\r\n  })  \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CampaignPanel)  \r\n","import React from 'react';\r\nimport { Drawer, Descriptions, Tooltip, Button } from 'antd';\r\nimport './employee-details-drawer.css';\r\n\r\nconst EmployeeDetailsDrawer: React.FC<any> = (props: any) => {\r\n  let {\r\n    employeeDetailsVisibility, \r\n    employeeDetails_OnClose,\r\n    employee\r\n      } = props;\r\n\r\n  return (\r\n    <div className=\"EmployeeDetailsDrawer\">\r\n      <Drawer\r\n          width={400}\r\n          placement=\"right\"\r\n          closable={false}\r\n          onClose={employeeDetails_OnClose}\r\n          visible={employeeDetailsVisibility}\r\n      >\r\n        <div style={{display: 'flex', justifyContent: 'center'}}>\r\n          <img alt=\"Test\"\r\n               src={employee.profileImageURL}\r\n            height=\"300\" />\r\n        </div>\r\n        <div style={{ display: 'flex', justifyContent: 'center', margin:\"10px\" }}>\r\n        <Tooltip title=\"Edit Employee Details\">\r\n          <Button icon=\"edit\" type=\"primary\" shape=\"circle\" />\r\n        </Tooltip>\r\n        </div>\r\n          <Descriptions\r\n          layout=\"horizontal\"\r\n          bordered\r\n          title={employee.companyInfo.employmentStatus + \" : \" + employee.personalInfo.firstName + \", \" + employee.personalInfo.lastName}\r\n          column={1}\r\n          style={{\r\n            marginTop: 30\r\n          }} >\r\n          <Descriptions.Item label=\"First Name\">{employee.personalInfo.firstName}</Descriptions.Item>\r\n          <Descriptions.Item label=\"Last Name\">{employee.personalInfo.lastName}</Descriptions.Item>\r\n          <Descriptions.Item label=\"Address\">{employee.personalInfo.address}</Descriptions.Item>\r\n          <Descriptions.Item label=\"Primary Contact\">{employee.personalInfo.primaryContact}</Descriptions.Item>\r\n          <Descriptions.Item label=\"Emergency Contact\">{employee.personalInfo.emergencyContact}</Descriptions.Item>\r\n          <Descriptions.Item label=\"CNIC\">{employee.personalInfo.cnic}</Descriptions.Item>\r\n          <Descriptions.Item label=\"Bank Account\">{employee.personalInfo.bankAccountNumber}</Descriptions.Item>\r\n          <Descriptions.Item label=\"Email\">{employee.companyInfo.email}</Descriptions.Item>\r\n          <Descriptions.Item label=\"Attendence Id\">{employee.companyInfo.attendanceId}</Descriptions.Item>\r\n          <Descriptions.Item label=\"HRMS Id\">{employee.companyInfo.hrmsId}</Descriptions.Item>\r\n          <Descriptions.Item label=\"Salary\">{employee.companyInfo.basicSalary}</Descriptions.Item>\r\n          <Descriptions.Item label=\"Sales Target\">{employee.companyInfo.salesTarget}</Descriptions.Item>\r\n        </Descriptions>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeeDetailsDrawer;\r\n","import React from 'react';\r\nimport { Modal } from 'antd';\r\nimport './image-preview-modal.css';\r\n\r\nconst ImagePreviewModal: React.FC<any> = (props: any) => {\r\n  let {\r\n    imagePreviewUrl,\r\n    imagePreview_OnCancel,\r\n  } = props;\r\n\r\n  return (\r\n    <div className=\"ImagePreviewModal\">\r\n      <Modal className=\"image-preview-modal\"\r\n        footer={null}\r\n        visible={imagePreviewUrl ? true : false}\r\n        onCancel={imagePreview_OnCancel}>\r\n        <img src={imagePreviewUrl}\r\n          alt=\"Preview\" />\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePreviewModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Card, Icon, Popconfirm, Checkbox, Spin, notification } from 'antd';\r\nimport EmployeeDetailsDrawer from './employee-details-drawer';\r\nimport ImagePreviewModal from './image-preview-modal';\r\nimport * as employeeApiHandler from \"../../../../../dataProvider/employee-api-handler\";\r\nimport './employee-image-card.css';\r\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\r\n\r\n\r\nconst { Meta } = Card;\r\n\r\nconst EmployeeImageCard: React.FC<any> = (props: any) => {\r\n  \r\n  let {\r\n    index,\r\n    employee,\r\n    toogleEmployeeSelect,\r\n    removeEmployee,\r\n  } = props;\r\n  \r\n  const [imagePreviewUrl, setImagePreviewUrl] = useState();\r\n  const [employeeDetailsVisibility, setEmployeeDetailsVisibility] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [checkboxVisiblility, setcheckboxVisiblility] = useState(employee.isSelected);\r\n\r\n  employee.profileImageURL = \"https://scontent.fisb3-1.fna.fbcdn.net/v/t1.0-0/c200.0.600.600a/p600x600/72262137_2893917777302324_2298028208844439552_n.jpg?_nc_cat=110&_nc_eui2=AeGkoMPZMTfRSFjBFoRl2rXcSy1icwxoCiNSyUZAuSyd01VVWHYl1UXhZvF-USFnptrmxEObBDnQLugb_T0BlAlO01fTzN3rh3X-OjExEvi5lA&_nc_ohc=G68U0--0uxoAQm9HgCUQLhk6hGAA7EWPRYf6W03bltgshwSvCATu3u6rQ&_nc_ht=scontent.fisb3-1.fna&oh=c8c8e6880f04bb74eb828904a9b95277&oe=5E442BB1\"\r\n\r\n  useEffect(()=>{\r\n    console.log(\"updating item\");\r\n    setcheckboxVisiblility(employee.isSelected);\r\n  }, [employee]);\r\n\r\n  function employeeDetails_OnClick(event: any) {\r\n    setEmployeeDetailsVisibility(true);\r\n  };\r\n  \r\n  function employeeDetails_OnClose(event: any) {\r\n    setEmployeeDetailsVisibility(false);\r\n  };\r\n  \r\n  function editEmployee_OnClick(event: any) {\r\n    setEmployeeDetailsVisibility(true);\r\n  };\r\n  \r\n  function previewImage_OnClick(event: any) {\r\n    if (employee) {\r\n      let url = employee.profileImageURL;\r\n      setImagePreviewUrl(url);\r\n      console.log(employee);\r\n    }\r\n  };\r\n  \r\n  function imagePreview_OnCancel(event: any) {\r\n    setImagePreviewUrl(null);\r\n  };\r\n\r\n  async function deleteEmployee_OnConfirm(event: any) {\r\n    try {\r\n      await employeeApiHandler.deleteEmployee(employee._id)\r\n\r\n      notification['success']({\r\n        message: 'Employee Deleted',\r\n        description:\r\n          `Successfully deleted ${employee.personalInfo.firstName},${employee.personalInfo.lastName}.`,\r\n      });\r\n\r\n      // Also remove employee from visible Grid \r\n      removeEmployee(employee);\r\n\r\n    } catch (error) {\r\n      notification['error']({\r\n        message: 'Failed to deleted Employee.',\r\n        description:\r\n          `${error.message}.`,\r\n      });\r\n    }\r\n\r\n  }\r\n  function onItemSelectionChanged(event: CheckboxChangeEvent) {\r\n    console.log(event);\r\n    //e.target.checked;\r\n\r\n    if (event.target.checked) {\r\n      setcheckboxVisiblility(true);\r\n      if(!employee.isSelected)\r\n        toogleEmployeeSelect(employee)\r\n    }\r\n    else {\r\n      setcheckboxVisiblility(false);\r\n      if(employee.isSelected)\r\n        toogleEmployeeSelect(employee)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"EmployeeImageCard\">\r\n      <Checkbox\r\n        checked={checkboxVisiblility}\r\n        onChange={onItemSelectionChanged}\r\n        value={index}\r\n        style={{\r\n          marginLeft: 3,\r\n          position: 'absolute',\r\n          zIndex: 1\r\n        }} />\r\n      <Card hoverable\r\n            cover={\r\n              isLoading ?\r\n                <Spin style={{padding:15}} indicator = {<Icon type=\"loading\" style={{ fontSize: 34 }}  /> }/>\r\n              :\r\n                 <img alt={employee.personalInfo.firstName} \r\n                    src={employee.profileImageURL}\r\n                    onClick={previewImage_OnClick} />\r\n            }\r\n            actions={[\r\n              // <Icon type=\"edit\" \r\n              //       key=\"edit\" \r\n              //       title=\"Edit Employee Details\"\r\n              //       onClick={editEmployee_OnClick} />,\r\n              <Popconfirm title={`Are you sure delete ${employee.personalInfo.firstName}?`}\r\n                          onConfirm={deleteEmployee_OnConfirm}\r\n                          okText=\"Yes\"\r\n                          cancelText=\"No\" >\r\n                <Icon type=\"delete\" \r\n                      key=\"delete\" \r\n                      title=\"Delete Employee\"  />\r\n              </Popconfirm>,\r\n              <Icon type=\"info-circle\" \r\n                    key=\"info-circle\" \r\n                    title=\"Employee Details\"\r\n                    onClick={employeeDetails_OnClick} />,\r\n        ]} >\r\n        <Meta title={employee.personalInfo.firstName + \",\" + employee.personalInfo.lastName}/>\r\n      </Card>\r\n      \r\n      <ImagePreviewModal  imagePreviewUrl={imagePreviewUrl}\r\n                          imagePreview_OnCancel={imagePreview_OnCancel}\r\n                          employee={employee} />\r\n\r\n      <EmployeeDetailsDrawer  employeeDetailsVisibility={employeeDetailsVisibility}\r\n                              employeeDetails_OnClose={employeeDetails_OnClose}\r\n                              employee={employee} />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeeImageCard;\r\n","import EmployeeImageCard from './employee-image-card-view'\r\nimport { connect } from 'react-redux'\r\nimport actions from '../../../../../redux/actions';\r\n\r\n\r\nfunction mapDispatchToProps(disptach: any) {\r\n  return {\r\n    toogleEmployeeSelect(employee: any) {\r\n      let temp = { ...employee };\r\n      temp.isSelected = temp.isSelected ? false : true ;\r\n      disptach(\r\n        actions.employeeActions.updateEmployee(temp)\r\n      )\r\n    },\r\n    removeEmployee(employee: any) {\r\n      console.log(\"Dispatching Remove Employee\");\r\n      disptach(\r\n        actions.employeeActions.removeEmployees([employee])\r\n      )\r\n    }\r\n  }\r\n}\r\n  \r\nexport default connect(null, mapDispatchToProps)(EmployeeImageCard)  \r\n","import React from 'react';\r\nimport { Empty, List, Checkbox, Skeleton } from 'antd';\r\nimport EmployeeImageCard from './employee-image-card'\r\nimport './campaign-employee-grid.css';\r\nimport { CheckboxChangeEvent } from 'antd/lib/checkbox';\r\n\r\nconst CampaignEmployeeGrid: React.FC<any> = (props: any) => {\r\n  let { \r\n    selectedCampaign,\r\n    filteredEmployees,\r\n    searchText,\r\n    selectedCount,\r\n    isLoading,\r\n    toogleEmployeeSelect\r\n  } = props;\r\n\r\n  let selectionText;\r\n  let selectAllStateIndeterminate;\r\n  let selectAllStateChecked;\r\n\r\n    // Text on UI => \" {visibleItems} items \"\r\n    if (selectedCount == 0) {\r\n      if (searchText.length > 0) {\r\n        selectionText = filteredEmployees.length + \" items\";\r\n      }\r\n      else { // No Filter Text applied\r\n        selectionText = filteredEmployees.length + \" items\";\r\n      }\r\n      selectAllStateChecked = false;\r\n      selectAllStateIndeterminate = false;\r\n    }\r\n    // Text on UI => \"{selectednumber}/{visibleItems} items\"\r\n    else {\r\n      if (searchText.length > 0) {\r\n        selectionText = `${selectedCount}/${filteredEmployees.length} items`;\r\n        let filteredSelectedCount = filteredEmployees.filter((employee:any) => { return employee.isSelected; }).length\r\n        \r\n        if (filteredSelectedCount === filteredEmployees.length) {\r\n          selectAllStateIndeterminate = false;\r\n          selectAllStateChecked = true;\r\n        }\r\n        else{\r\n          selectAllStateIndeterminate = true;\r\n          selectAllStateChecked = false;\r\n        }\r\n      }\r\n      // Else: No Search Text Applied\r\n      else {\r\n        selectionText = `${selectedCount}/${filteredEmployees.length} items`;\r\n        if (filteredEmployees.length > selectedCount) {\r\n          // If Some employees are selected.\r\n          selectAllStateIndeterminate = true;\r\n          selectAllStateChecked = false; // Don't Remove\r\n        }\r\n        else {\r\n          // All employees are selected\r\n          selectAllStateIndeterminate = false;\r\n          selectAllStateChecked = true;\r\n        }\r\n      }\r\n    }\r\n    \r\n    function onSelectAllChanged(event: CheckboxChangeEvent) {\r\n      if (event.target.checked) {\r\n        filteredEmployees.forEach((employee:any) => {\r\n          if (!employee.isSelected) {\r\n            toogleEmployeeSelect(employee); // Select Image\r\n          }\r\n        });\r\n      }\r\n      else {\r\n        // Select All Unchecked\r\n        filteredEmployees.forEach((employee:any) => {\r\n          if (employee.isSelected) {\r\n            toogleEmployeeSelect(employee); // de select Image\r\n          }\r\n        });\r\n      }\r\n  }\r\n  \r\n\r\n  if (isLoading === false) {\r\n\r\n    if (!selectedCampaign){\r\n      return (\r\n        <Empty\r\n          style={{ marginTop: '10%' }}\r\n          description={\"Please Select Campaign\"} />\r\n      );\r\n    }\r\n\r\n    if (!filteredEmployees || !filteredEmployees.length) {\r\n      return (\r\n        <Empty \r\n          style={{ marginTop: '10%' }}\r\n          description={\"No Employees\"} />\r\n      );\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"CampaignEmployeeGrid\">\r\n      <Skeleton loading={isLoading} active paragraph={{ rows: 10 }} >\r\n      <div>\r\n          <Checkbox style={{ marginLeft: 3, marginBottom: 20 }}\r\n            indeterminate={selectAllStateIndeterminate}\r\n            onChange={onSelectAllChanged}\r\n            checked={selectAllStateChecked}\r\n          >\r\n            {selectionText}\r\n          </Checkbox>\r\n          <List\r\n            grid={{ gutter: 16, column: 8 }}\r\n            dataSource={filteredEmployees}\r\n            renderItem={(employee: any, index: number) => (\r\n              <List.Item key={index}>\r\n                <EmployeeImageCard  index={index} \r\n                                    employee={employee} />\r\n              </List.Item>\r\n            )}\r\n          />\r\n        </div>\r\n        </Skeleton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CampaignEmployeeGrid;\r\n","import CampaignEmployeeGrid from './campaign-employee-grid-view'\r\nimport { connect } from 'react-redux'\r\nimport actions from '../../../../redux/actions';\r\n\r\n\r\nconst mapStateToProps = (state:any) => \r\n  ({\r\n    selectedCampaign: state.campaigns.find((campaign: any) => campaign.isSelected),\r\n    filteredEmployees: state.employees.filter((employee: any) => employee.personalInfo.firstName.toLowerCase().includes(state.filters.searchText.toLowerCase())),\r\n    selectedCount: state.employees.filter((employee: any) => employee.isSelected).length,\r\n    searchText: state.filters.searchText\r\n  })\r\n\r\nfunction mapDispatchToProps(disptach: any) {\r\n  return {\r\n    toogleEmployeeSelect(employee: any) {\r\n      let temp = { ...employee };\r\n      temp.isSelected = temp.isSelected ? false : true ;\r\n      disptach(\r\n        actions.employeeActions.updateEmployee(temp)\r\n      )\r\n    }\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CampaignEmployeeGrid)  \r\n","import * as React from 'react'\r\nexport const Add = (props: React.SVGProps<SVGSVGElement>) => (\r\n    <svg viewBox=\"0 0 16 16\" {...props} >\r\n        <path d=\"M7,1v6H1v2h6v6h2V9h6V7H9V1H7z\"/>\r\n    </svg>\r\n)\r\nexport default Add\r\n","import React from 'react';\r\nimport { AutoComplete, Input, Icon, Button as AntButton } from 'antd';\r\nimport './employee-search-bar.css';\r\n\r\nconst EmployeeSearchBar: React.FC<any> = (props: any) => {\r\n  let {\r\n    updateFilterText\r\n  } = props;\r\n\r\n  function handleSearch(value: string) {\r\n    updateFilterText(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"EmployeeSearchBar\">\r\n      <div className=\"global-search-wrapper\" style={{ width: 450 }}>\r\n        <AutoComplete\r\n          className=\"global-search\"\r\n          size=\"large\"\r\n          style={{ width: '100%' }}\r\n          placeholder=\"Search employees\"\r\n          optionLabelProp=\"text\"\r\n          onSearch = {handleSearch}\r\n        >\r\n          <Input\r\n              suffix={\r\n                <AntButton\r\n                  className=\"search-btn\"\r\n                  style={{ marginRight: -12 }}\r\n                  size=\"large\"\r\n                  type=\"primary\"\r\n                >\r\n                  <Icon type=\"search\" />\r\n                </AntButton>\r\n              }\r\n            />\r\n        </AutoComplete>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeeSearchBar;\r\n","import EmployeeSearchBar from './employee-search-bar-view'\r\nimport { connect } from 'react-redux'\r\nimport actions from '../../../../../redux/actions';\r\n\r\nconst mapDispatchToProps = (disptach:any) => \r\n({\r\n  updateFilterText(text: string) {\r\n    disptach(\r\n      actions.filterActions.updateFilterText(text)\r\n    )\r\n  }\r\n})  \r\nexport default connect(null, mapDispatchToProps)(EmployeeSearchBar)  \r\n","import React, { useState, MouseEvent } from 'react';\r\nimport { Breadcrumb, Row, Col, Icon, notification, Dropdown, Menu, Button } from 'antd';\r\nimport Add from '../../../../assets/icons/add';\r\nimport AddEmployeeModal from './add-employee-modal';\r\nimport EmployeeSearchBar from  './employee-search-bar';\r\nimport './employee-options-panel.css';\r\n\r\nconst viewStyleOptions = [\r\n  {\r\n    \"Name\" : \"Grid\",\r\n    \"Key\" : \"grid\",\r\n    \"Icon\" : \"appstore\"\r\n  },\r\n  {\r\n    \"Name\" : \"Map\",\r\n    \"Key\" : \"map\",\r\n    \"Icon\" : \"global\"\r\n  }\r\n];\r\n\r\nconst EmployeeOptionsPanel: React.FC<any> = (props: any) => {\r\n  const [addEmployeeModalModalVisibility, setAddEmployeeModalModalVisibility] = useState(false);\r\n  let { \r\n        selectedCampaign,\r\n        viewStyle,\r\n        viewStyle_OnClick,\r\n      } = props;\r\n\r\n  let selectedViewStyle = viewStyleOptions.filter(obj => { return obj.Key === viewStyle})[0];\r\n\r\n  function addEmployeeModal_OnClick(event: MouseEvent<HTMLButtonElement | HTMLAnchorElement>) {\r\n    //Show Upload Image Dialog\r\n    setAddEmployeeModalModalVisibility(true);  \r\n  }\r\n\r\n  async function addEmployeeModal_OnOk(event: any) {\r\n    setAddEmployeeModalModalVisibility(false);\r\n  }\r\n\r\n  function addEmployeeModal_OnCancel(event: any) {\r\n    //Hide add employee Dialog\r\n    setAddEmployeeModalModalVisibility(false);\r\n\r\n  };\r\n\r\n  if (!selectedCampaign) {\r\n    return (\r\n      <div></div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"EmployeeOptionsPanel\">\r\n      <Row style={{ background: 'white', marginBottom: 6 }}>\r\n        <Col span={8}>\r\n          <Breadcrumb style={{ margin: '16px 0', marginLeft: 20, fontSize: 16 }}>\r\n            <Breadcrumb.Item>{selectedCampaign.name}</Breadcrumb.Item>\r\n          </Breadcrumb>\r\n        </Col>\r\n        <Col span={8} style={{ marginTop: 6 }}>\r\n          <EmployeeSearchBar />\r\n        </Col>\r\n        <Col span={8} style={{textAlign: 'right', marginTop: 6, paddingRight: 20}}>\r\n          <Button title=\"Add New Employee\" style={{marginLeft: 5}} onClick={addEmployeeModal_OnClick}>\r\n          <Icon type=\"plus\" style={{fill: 'white', fontSize: 18, marginRight: 5, marginBottom: -2}}/>\r\n            <Add style={{fill: 'white', width: 16, marginRight: 5, marginBottom: -2}} />\r\n            <span>Add Employee</span>\r\n          </Button>\r\n          \r\n          <Dropdown placement=\"bottomCenter\" \r\n                    overlay={\r\n                      <Menu multiple={false} \r\n                            selectedKeys={[ viewStyle ]}\r\n                            onClick={ viewStyle_OnClick }>\r\n                        {\r\n                          viewStyleOptions.map((item) => {\r\n                            return (\r\n                              <Menu.Item key={item.Key} \r\n                                         style={{ width: 120 }}>\r\n                                <Icon type={item.Icon}\r\n                                      style={{ marginRight: 10 }} />\r\n                                {item.Name}\r\n                              </Menu.Item>\r\n                            );\r\n                          })\r\n                        }\r\n                      </Menu>\r\n                    }>\r\n            <Button\r\n                    title=\"View Style\"\r\n                    style={{marginLeft: 5}}>\r\n              <Icon type={selectedViewStyle.Icon} \r\n                    style={{ fontSize: 16, verticalAlign: 'middle' }} />\r\n            </Button>\r\n          </Dropdown>\r\n        </Col>\r\n      </Row>\r\n\r\n      <AddEmployeeModal addEmployeeModalModalVisibility={addEmployeeModalModalVisibility}\r\n                        addEmployeeModal_OnCancel={addEmployeeModal_OnCancel}\r\n                        addEmployeeModal_OnOk={addEmployeeModal_OnOk} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeeOptionsPanel;\r\n","import EmployeeOptionsPanel from './employee-options-panel-view'\r\nimport { connect } from 'react-redux'\r\nimport actions from '../../../../redux/actions';\r\n\r\nfunction mapStateToProps(state: any){\r\n  return {\r\n      selectedCampaign: state.campaigns.find((campaign: any) => campaign.isSelected)\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (disptach:any) => \r\n  ({\r\n    selectCampaign(campaign:any) {\r\n      disptach(\r\n        actions.campaignActions.selectCampaign(campaign)\r\n      )\r\n    }\r\n  })  \r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeOptionsPanel)  \r\n","import React, { useState, useEffect } from 'react';\r\nimport { Layout, notification } from 'antd';\r\nimport CampaignEmployeeGrid from './campaign-employee-grid';\r\nimport EmployeeOptionsPanel from './employee-options-panel';\r\nimport './employee-content.css';\r\nimport * as EmployeeApiHandler from \"../../../dataProvider/employee-api-handler\";\r\nconst { Content } = Layout;\r\n\r\nconst EmployeeContent: React.FC = (props:any) => {\r\n  let {\r\n    selectedCampaign,\r\n    setEmployees\r\n  } = props;\r\n  const [viewStyle, setViewStyle] = useState(\"grid\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  /**\r\n   * Fetch Employees from API and set enmployees variable\r\n   */\r\n  useEffect( () => {\r\n    (async function dummyFunction() {\r\n      try {\r\n        if (selectedCampaign)\r\n        {\r\n          setIsLoading(true);\r\n          let fetchedEmployees = await EmployeeApiHandler.getEmployeesByCampaign(selectedCampaign._id);\r\n          setEmployees(fetchedEmployees);\r\n          setIsLoading(false);\r\n        }\r\n      }catch(err){\r\n        console.log(err);\r\n        notification['error']({\r\n          message: 'Error Fetching Campaign Employees',\r\n          description:\r\n            `${err.message}.`,\r\n        });\r\n      }\r\n      })();\r\n    }, []);  // [] means effect function should be called once: after the first mount/render only.\r\n\r\n\r\n  function viewStyle_OnClick(event: any) {\r\n    setViewStyle(event.key);\r\n  }\r\n  \r\n  return (\r\n    <div className=\"EmployeeContent\">\r\n      <EmployeeOptionsPanel viewStyle={viewStyle}\r\n                            viewStyle_OnClick={viewStyle_OnClick} />\r\n\r\n      <Content\r\n        style={{\r\n          background: '#fff',\r\n          padding: 24,\r\n          margin: 0,\r\n          minHeight: 750,\r\n        }} >\r\n        <CampaignEmployeeGrid isLoading={isLoading} />\r\n      </Content>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeeContent;\r\n","import EmployeeContentView from './employee-content-view'\r\nimport { connect } from 'react-redux'\r\nimport actions from '../../../redux/actions';\r\n\r\nfunction mapStateToProps(state: any){\r\n  return {\r\n    selectedCampaign: state.campaigns.find((campaign: any) => campaign.isSelected)\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(disptach: any) {\r\n  return {\r\n    setEmployees(employees: [any]) {\r\n      disptach(\r\n        actions.employeeActions.setEmployees(employees)\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeContentView)  \r\n","import React from 'react';\r\nimport { Layout } from 'antd';\r\nimport CampaignPanel from './campaign-panel';\r\nimport EmployeeContent from './employee-content';\r\nimport './employee-manager.css';\r\n\r\nconst { Sider } = Layout;\r\n\r\nconst EmployeeManager: React.FC = (props) => {\r\n\r\n  return (\r\n    <div className=\"EmployeeManager\">\r\n      <Layout style={{ marginTop: 64 }}>\r\n        <Sider width={300} style={{ background: '#fff' }}>\r\n          <CampaignPanel />\r\n        </Sider>\r\n\r\n        <Layout style={{ padding: '0 0 0 6px' }}>\r\n          <EmployeeContent />\r\n        </Layout>\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EmployeeManager;","import React from 'react';\r\nimport { Menu } from 'antd';\r\n// import { Title } from '@bentley/bwc-react/core';\r\nimport './avatar-popup-content.css';\r\n\r\nconst AvatarPopupContent: React.FC = () => {\r\n  return (\r\n    <div>\r\n      {/* <Title>Greg Bentley</Title> */}\r\n      <Menu selectable={false} style={{ border: 'none' }}>\r\n        <Menu.Item>\r\n          <a rel=\"noopener noreferrer\" href=\"/#\">\r\n            My Account\r\n          </a>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <a rel=\"noopener noreferrer\" href=\"/#\">\r\n            Logout\r\n          </a>\r\n        </Menu.Item>\r\n      </Menu>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AvatarPopupContent;\r\n","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Avatar, Row, Col, Popover, PageHeader  } from 'antd';\r\nimport logoTransparent from '../../assets/images/logo-transparent.png'\r\nimport './navbar.css';\r\nimport AvatarPopupContent from './avatar-popup-content'\r\n\r\nconst NavBar: React.FC = (props) => {\r\n  return (\r\n    <div className=\"NavBar\">\r\n      <Row type=\"flex\" align=\"middle\">\r\n        <Col span={18} style={{ display: 'flex', alignItems: 'center' }}>\r\n          <Link to=\"/\">\r\n            <PageHeader title=\"HRMS\"\r\n              subTitle=\"AllStar HR Portal\"/>\r\n          </Link>\r\n        </Col>\r\n\r\n        <Col span={6} style={{ textAlign: 'right' }}>\r\n          <Popover placement=\"bottomLeft\" content={AvatarPopupContent(props)} trigger=\"hover\">\r\n            <Avatar style={{ backgroundColor: \"#56aa1c\", verticalAlign: 'middle', cursor: 'pointer' }} size=\"large\">\r\n              HA\r\n            </Avatar>\r\n          </Popover>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import { Form, Icon, Input, Button, Checkbox } from 'antd';\r\nimport React from 'react';\r\nimport './login.css'\r\n\r\nconst LoginForm: React.FC<any> = (props: any) => {\r\n  \r\n  let {\r\n    getFieldDecorator\r\n  } = props.form;\r\n  \r\n  function handleSubmit(event:any) {\r\n    event.preventDefault();\r\n    props.form.validateFields((err:any, values:any) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"LoginForm\">\r\n      <Form onSubmit={handleSubmit} className=\"login-form\">\r\n        <Form.Item>\r\n          {getFieldDecorator('username', {\r\n            rules: [{ required: true, message: 'Please input your username!' }],\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              placeholder=\"Username\"\r\n            />,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('password', {\r\n            rules: [{ required: true, message: 'Please input your Password!' }],\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item>\r\n          {getFieldDecorator('remember', {\r\n            valuePropName: 'checked',\r\n            initialValue: true,\r\n          })(<Checkbox>Remember me</Checkbox>)}\r\n          <a className=\"login-form-forgot\" href=\"\">\r\n            Forgot password\r\n          </a>\r\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n            Log in\r\n          </Button>\r\n          Or <a href=\"\">register now!</a>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n\r\n}\r\nexport default Form.create()(LoginForm);","\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'antd/dist/antd.css';\r\nimport './register.css';\r\nimport { Form, Input, Tooltip, Icon, Cascader, Select,\r\n           Row, Col, Checkbox, Button, AutoComplete } from 'antd';\r\n\r\nconst { Option } = Select;\r\nconst AutoCompleteOption = AutoComplete.Option;\r\n\r\nclass RegistrationForm extends React.Component {\r\n  state = {\r\n    confirmDirty: false,\r\n    autoCompleteResult: [],\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        console.log('Received values of form: ', values);\r\n      }\r\n    });\r\n  };\r\n\r\n  handleConfirmBlur = e => {\r\n    const { value } = e.target;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const { form } = this.props;\r\n    if (value && value !== form.getFieldValue('password')) {\r\n      callback('Two passwords that you enter is inconsistent!');\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const { form } = this.props;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields(['confirm'], { force: true });\r\n    }\r\n    callback();\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n    const prefixSelector = getFieldDecorator('prefix', {\r\n      initialValue: '86',\r\n    })(\r\n      <Select style={{ width: 70 }}>\r\n        <Option value=\"92\">+92</Option>\r\n      </Select>,\r\n    );\r\n\r\n    return (\r\n      <div className=\"RegisterForm\">\r\n        <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n        <Form.Item label=\"E-mail\">\r\n          {getFieldDecorator('email', {\r\n            rules: [\r\n              {\r\n                type: 'email',\r\n                message: 'The input is not valid E-mail!',\r\n              },\r\n              {\r\n                required: true,\r\n                message: 'Please input your E-mail!',\r\n              },\r\n            ],\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Password\" hasFeedback>\r\n          {getFieldDecorator('password', {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: 'Please input your password!',\r\n              },\r\n              {\r\n                validator: this.validateToNextPassword,\r\n              },\r\n            ],\r\n          })(<Input.Password />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Confirm Password\" hasFeedback>\r\n          {getFieldDecorator('confirm', {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: 'Please confirm your password!',\r\n              },\r\n              {\r\n                validator: this.compareToFirstPassword,\r\n              },\r\n            ],\r\n          })(<Input.Password onBlur={this.handleConfirmBlur} />)}\r\n        </Form.Item>\r\n        <Form.Item\r\n          label={\r\n            <span>\r\n              Nickname&nbsp;\r\n              <Tooltip title=\"What do you want others to call you?\">\r\n                <Icon type=\"question-circle-o\" />\r\n              </Tooltip>\r\n            </span>\r\n          }\r\n        >\r\n          {getFieldDecorator('nickname', {\r\n            rules: [{ required: true, message: 'Please input your nickname!', whitespace: true }],\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Phone Number\">\r\n          {getFieldDecorator('phone', {\r\n            rules: [{ required: true, message: 'Please input your phone number!' }],\r\n          })(<Input addonBefore={prefixSelector} style={{ width: '100%' }} />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailFormItemLayout}>\r\n          {getFieldDecorator('agreement', {\r\n            valuePropName: 'checked',\r\n          })(\r\n            <Checkbox>\r\n              I have read the <a href=\"\">agreement</a>\r\n            </Checkbox>,\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item {...tailFormItemLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Register\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Form.create()(RegistrationForm);\r\n","import React from 'react';\r\nimport { Switch, Route} from \"react-router-dom\";\r\nimport { Layout } from 'antd';\r\nimport EmployeeManager from '../employee-manager';\r\nimport NavBar from '../navbar';\r\nimport LoginForm from '../auth/login';\r\nimport RegisterForm from '../auth/register';\r\nimport './app.css';\r\n\r\nconst { Header, Footer } = Layout;\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"App\">\r\n        <Layout>\r\n          \r\n          <Header style={{ position: 'fixed', zIndex: 500, width: '100%' }}>\r\n            <NavBar />\r\n          </Header>\r\n          <Switch>\r\n\r\n            {/* If none of the previous routes render anything,\r\n                this route acts as a fallback.\r\n\r\n                Important: A route with path=\"/\" will *always* match\r\n                the URL because all URLs begin with a /. So that's\r\n                why we put this one last of all */}\r\n            <Route exact path=\"/login\">\r\n                <LoginForm />\r\n            </Route>\r\n            <Route exact path=\"/register\">\r\n                <RegisterForm />\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <EmployeeManager />\r\n            </Route>\r\n\r\n          </Switch>\r\n            <Footer style={{ textAlign: 'center' }}>Copyrights {new Date().getFullYear()} © Bentley Systems</Footer>\r\n        </Layout>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import Constants from '../constants'\r\n\r\n\r\nfunction compareCampaigns( firstCampaign:any, secondCampaign:any ) {\r\n  if ( firstCampaign._id < secondCampaign._id ){\r\n    return -1;\r\n  }\r\n  if ( firstCampaign.albumID > secondCampaign.albumID ){\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\nexport default function campaigns(state = [] , action: any) {\r\n\r\n\tswitch (action.type) {\r\n    case Constants.UPDATE_CAMPAIGN:\r\n      let updatedCampaign = action.payload;\r\n\t\t\tlet otherCampaigns = state.filter((campaign: any) => campaign._id !== updatedCampaign._id);\r\n\t\t\treturn [...otherCampaigns, updatedCampaign].sort(compareCampaigns);\r\n\r\n    case Constants.SET_CAMPAIGNS:\r\n      let newCampaigns = action.payload; \r\n\t\t\treturn newCampaigns.slice().sort(compareCampaigns);\r\n\t\r\n    case Constants.ADD_CAMPAIGNS:\r\n      let moreCampaigns = action.payload;\r\n\t\t\treturn [...state, ...moreCampaigns].sort(compareCampaigns);\r\n\r\n    case Constants.REMOVE_CAMPAIGNS:\r\n      let campaignsToRemove = action.payload;\r\n\t\t\treturn state.filter((campaign: any) => campaignsToRemove.find( (campaignToRemove: any) => campaignToRemove._id === campaign._id) );\r\n\r\n\t\tcase Constants.SELECT_CAMPAIGN:\r\n      let campaigns = [...state];\r\n      let campaignToSelect = action.payload;\r\n\t\t\tcampaigns.forEach( (campaign:any)=>{\r\n\t\t\t\tif (campaign._id === campaignToSelect._id)\r\n          campaign.isSelected = true;\r\n\t\t\t\telse\r\n          campaign.isSelected = false;\r\n\t\t\t} )\r\n\t\t\treturn campaigns;\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import Constants from '../constants'\r\n\r\nfunction compareEmployees( firstEmployee:any, secondEmployee:any ) {\r\n  if ( firstEmployee._id < secondEmployee._id ){\r\n    return -1;\r\n  }\r\n  if ( firstEmployee._id > secondEmployee._id ){\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport default function employees(state = [], action: any) {\r\n\r\n\tswitch (action.type) {\r\n    case Constants.UPDATE_EMPLOYEE:\r\n      let updatedEmployee = action.payload;\r\n      let otherEmployees = state.filter((employee: any) => employee._id !== updatedEmployee._id);\r\n      return [...otherEmployees, updatedEmployee].sort(compareEmployees);\r\n\t\t\r\n    case Constants.SET_EMPLOYEES:\r\n      let newEmployees = action.payload; \r\n\t\t\treturn newEmployees.slice().sort(compareEmployees);\r\n\t\t\r\n    case Constants.ADD_EMPLOYEES:\r\n      let moreEmployees = action.payload;\r\n\t\t\treturn [...state, ...moreEmployees].sort(compareEmployees);\r\n\t\t\r\n    case Constants.REMOVE_EMPLOYEES:\r\n      let employeesToRemove = action.payload;\r\n      console.log(\"Employee to Remove : \");\r\n      console.log(employeesToRemove);\r\n\t\t\treturn state.filter((employee: any) => employeesToRemove.find( (employeeToDelete:any) => employee._id !== employeeToDelete._id));\r\n\t\t\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}","import { combineReducers } from 'redux';\r\nimport campaigns from \"./campaigns\";\r\nimport employees from \"./employees\";\r\nimport searchText from \"./filters/searchText\";\r\n\r\nexport default combineReducers({\r\n\tcampaigns,\r\n\temployees,\r\n\tfilters:combineReducers({\r\n\t\tsearchText\r\n\t})\r\n})","import Constants from '../../constants'\r\n\r\nexport default function searchText(state: any =\"\", action: any) {\r\n\r\n\tswitch (action.type) {\r\n\t\tcase Constants.UPDATE_SEARCH_TEXT:\r\n\t\t\treturn action.payload\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n","import appReducer from './reducers'\r\nimport thunk from \"redux-thunk\"\r\nimport { createStore, applyMiddleware } from 'redux'\r\n\r\nconst consoleMessages = (store:any) => (next:any) => (action:any) => {\r\n\r\n\tlet result;\r\n\r\n\tconsole.groupCollapsed(`dispatching action => ${action.type}`);\r\n\tconsole.log('selected album:', store.getState().selectedAlbum);\r\n\tresult = next(action);\r\n\r\n\tlet { selectedAlbum } = store.getState();\r\n\r\n\tconsole.log(`\r\n\t\tselected album: ${selectedAlbum}\r\n\t`);\r\n\r\n\tconsole.groupEnd();\r\n\r\n\treturn result;\r\n\r\n}\r\n\r\nexport default () => {\r\n\treturn applyMiddleware(thunk,consoleMessages)(createStore)(appReducer)\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport 'antd/dist/antd.css'\r\nimport './index.css';\r\nimport App from './components/app';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport storeFactory from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\n\r\nconst store = storeFactory();\r\n\r\ndeclare global {\r\n  interface Window { Store: any; }\r\n}\r\nwindow.Store = store;\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>, \r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import Config from '../config';\r\nimport { async } from 'q';\r\nconst axios = require('axios');\r\n\r\nconst EMPLOYEE_ENDPOINT = `${Config.ServiceEndpoint}/employee`;\r\nexport async function getEmployeesByCampaign(campaignId: number) {\r\n    \r\n    let fetchedEmployees: any = [];\r\n    console.log(\"Getting Employees for campaign\" + campaignId);\r\n    try {\r\n        let response = await axios.get(`${EMPLOYEE_ENDPOINT}/campaign/${campaignId}`);\r\n        response.data.forEach((employee: any) => {\r\n            console.log(employee);\r\n            fetchedEmployees.push(employee);\r\n        });\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n    return fetchedEmployees;\r\n}\r\nexport async function addNewEmployee(employee: any) {\r\n\r\n    try {\r\n        let res = await axios.post(EMPLOYEE_ENDPOINT, employee);\r\n        if (res.status === 201) // 201 Created\r\n            return res.data;\r\n        throw new Error(\"Failed to Add Employee\");\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\nexport async function deleteEmployee(employeeId: number) {\r\n\r\n    try {\r\n        let res = await axios.delete(`${EMPLOYEE_ENDPOINT}/${employeeId}`);\r\n        if (res.status === 200) {\r\n            return;\r\n        }\r\n        throw new Error(\"Failed to Remove Employee\");\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n}\r\n\r\n// export async function uploadAllPhotos(uploadFileList:any, albumId: number) {\r\n    \r\n//     const formData = new FormData();\r\n\r\n//     // Loop Selected files and Append in Form Data.\r\n//     uploadFileList.forEach((file:any) => {\r\n//       console.log(file.originFileObj);\r\n//       formData.append(`Files`, file.originFileObj);\r\n//     });\r\n\r\n//     // ID of album in which images will be added.\r\n//     formData.append(`AlbumID`, `${albumId}`);\r\n\r\n//     try{\r\n//         let res = await axios.post(IMAGE_STORE_ENDPOINT, formData, {\r\n//           headers: {'Content-Type': 'multipart/form-data'}\r\n//         });\r\n//         return res;   \r\n//     }catch(error){\r\n//         throw error;\r\n//     }\r\n// }","import AddEmployeeModal from './add-employee-modal-view'\r\nimport { connect } from 'react-redux'\r\nimport actions from \"../../../../../redux/actions\";\r\nfunction mapStateToProps(state: any){\r\n  return {\r\n      selectedCampaign: state.campaigns.find((campaign: any) => campaign.isSelected)\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (disptach:any) => \r\n  ({\r\n    addEmployee(employee:any) {\r\n      disptach(\r\n        actions.employeeActions.addEmployees([employee])\r\n      )\r\n    }\r\n  })  \r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(AddEmployeeModal)  \r\n","export { default } from './add-employee-modal-container';\r\nexport {EmployeeContext} from \"./add-employee-modal-view\";"],"sourceRoot":""}